Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: km
  ImageId:
    Type: AWS::EC2::Image::Id
  DeploymentBucket:
    Type: String
  Environment:
    Type: String
  SubnetIds:
    Type: String
  VpcId:
    Type: String

Resources:
  launchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: ImageId
      IamInstanceProfile:
        Ref: instanceProfile
      InstanceType: t2.micro
      SecurityGroups:
        -
          Ref: securityGroup
      UserData:
              Fn::Base64:
                !Sub |
                  #!/bin/bash -xe
                  echo "Installing CodeDeploy agent"
                  yum -y update
                  yum install -y ruby
                  curl -O https://aws-codedeploy-${AWS::Region}.s3.amazonaws.com/latest/install
                  chmod +x ./install
                  ./install auto

                  echo "Installing nodejs, npm"
                  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash
                  nvm install v6.11.3

                  echo "Create application home"
                  mkdir -p /home/ec2-user/webapp
                  chown -R ec2-user:ec2-user /home/ec2-user

  autoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName:
        Ref: launchConfiguration
      MinSize: 2
      MaxSize: 2
      MetricsCollection:
        -
          Granularity: "1Minute"
          Metrics:
            - GroupMinSize
            - GroupMaxSize
      Tags:
        -
          Key: environment
          Value:
            Ref: Environment
          PropagateAtLaunch: true
        -
          Key: Name
          Value: webapp
          PropagateAtLaunch: true
      VPCZoneIdentifier:
        -
          Ref: SubnetIds

  instanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        -
          Ref: accessRevisionRole

  accessRevisionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: accessBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Resource:
                  - !Join ["", [ "arn:aws:s3:::", !Ref 'DeploymentBucket', "/*" ]]
                  - !Join ["", [ "arn:aws:s3:::", !Ref 'DeploymentBucket' ]]
                Action:
                  - s3:Get*
                  - s3:List*

  securityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: webapp instance security group
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        -
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

